@page "/survey1"
@inject Models.EmployeeContext DBContext

@using FirstBlazorApp.Models


<MatButton>Test</MatButton>
<h3>survey1</h3>
<p>GroupIdAux:@SelectProvinceId</p>

   <MatSelect Label="จังหวัด2" @bind-Value="@SelectProvinceId" TValue="string"
Outlined="true" FullWidth>
	   @if (provinces1 != null)
	{
		@foreach(var item in provinces1)
	{
		<MatOption TValue="string" Value="@item.province_id">@item.province_name_thai</MatOption>
	}
	}
</MatSelect>

<p>GroupIdAux:@SelectDistrictId</p>
<MatSelect Label="เลือกอำเภอ"  @bind-Value="@SelectDistrictId" TValue="string"  Outlined="true" FullWidth>
	   
	  
	
		@foreach(var item in districts)
	{
		<MatOption  TValue="String" Value="@item.district_id">@item.district_name_thai</MatOption>
	}
	
</MatSelect>
 
<p>GroupIdAux:@tambonId</p>
<MatSelect Label="เลือกอำเภอ" @bind-Value="@tambonId"  Outlined="true" FullWidth>
	  <MatOptionString></MatOptionString>
	
		@foreach(var item in tambons)
	{
		<MatOption TValue="string" Value="@item.tambon_id">@item.tambon_name_thai</MatOption>
	}
	
</MatSelect>
 


 
@code {
	string value1;
	List<province> provinces1=new List<province>();
	List<district> districts = new List<district>();
	List<tambon> tambons = new List<tambon>();
	string provinceId;
	string districtId;
	string districtId2;
	string tambonId;
//	List<province> provinces = new List<province>();
	 //private List<Models.district> districts = null;

	  private string threatId = null;
	  private string threatId2 = null;
	  private string threatId3 = null;

    public string SelectProvinceId
    {
        get { return threatId; }set
        {
            threatId = value;
            SelectThreatValueChanged(value);
        }
    }
    public string SelectDistrictId
    {
        get { return threatId2; }set
        {
			
					threatId2 = value;
			if (value != null && value != "")
			{
            SelectDistrictValueChanged(value);
			}
			else
			{
			//	tambons.Clear();
			}

        }
    }
    public string SelectTambonId
    {
        get { return threatId3; }set
        {
			
					threatId3 = value;
		
		
        }
    }

    
	  private async void SelectDistrictValueChanged(string id)
    {//https://stackoverflow.com/questions/64802201/blazor-matblazor-how-to-catch-the-value-change-of-matselect-component
		int proId = Convert.ToInt32(id);
		if(id!=null)
		 tambons =await DBContext.GetByIndex<string,tambon>("tambon",id,null,"district_id",false);
		tambonId = "";
		StateHasChanged();


    }
	  private async void SelectThreatValueChanged(string id)
    {//https://stackoverflow.com/questions/64802201/blazor-matblazor-how-to-catch-the-value-change-of-matselect-component
		int proId = Convert.ToInt32(id);
		tambonId ="";
		districts =await DBContext.GetByIndex<int?,district>("district", proId,0,"province_id",false);
		SelectDistrictId = null;
		
		tambons = new List<tambon>();
		StateHasChanged();
		//
	}
			





	 protected override async Task OnInitializedAsync()
	{
		 provinces1 = await DBContext.GetAll<province>("province");
	}
	

}
